#include <iostream>
#include <string>
#include <cstdlib>

using namespace std;

// Structure for storing player information
struct Player {
    int id;
    string name;
    int score;
    string history[10]; // Store right or wrong per question
    Player* next;
};

// Structure for questions
struct Question {
    string question;
    string options[4];
    char correctAnswer;
};

// Function Prototypes
void addPlayer(Player*& head, int& nextId, string name);
void playGame(Player* head, int id);
void viewPlayer(Player* head, int id);
void deletePlayer(Player*& head, int id);
Player* findPlayerById(Player* head, int id);
void displayMenu();
void displayQuestions(Question questions[], Player* player);

// Sample Questions
Question questions[10] = {
    {"What is the capital of France?", {"A) Paris", "B) London", "C) Rome", "D) Madrid"}, 'A'},
    {"Which planet is known as the Red Planet?", {"A) Earth", "B) Mars", "C) Jupiter", "D) Venus"}, 'B'},
    {"Who wrote 'Hamlet'?", {"A) Charles Dickens", "B) Mark Twain", "C) William Shakespeare", "D) Jane Austen"}, 'C'},
    {"What is 5 + 7?", {"A) 10", "B) 12", "C) 14", "D) 16"}, 'B'},
    {"Which gas do plants absorb from the atmosphere?", {"A) Oxygen", "B) Nitrogen", "C) Carbon Dioxide", "D) Hydrogen"}, 'C'},
    {"Who painted the Mona Lisa?", {"A) Vincent van Gogh", "B) Pablo Picasso", "C) Leonardo da Vinci", "D) Michelangelo"}, 'C'},
    {"Which element has the chemical symbol 'O'?", {"A) Gold", "B) Oxygen", "C) Silver", "D) Iron"}, 'B'},
    {"What is the largest ocean?", {"A) Atlantic", "B) Indian", "C) Arctic", "D) Pacific"}, 'D'},
    {"What is the square root of 64?", {"A) 6", "B) 7", "C) 8", "D) 9"}, 'C'},
    {"Which country is famous for the Great Wall?", {"A) China", "B) India", "C) Japan", "D) Russia"}, 'A'}
};

// Add new player to linked list
void addPlayer(Player*& head, int& nextId, string name) {
    Player* newPlayer = new Player{nextId++, name, 0, {}, nullptr};

    if (!head) {
        head = newPlayer;
    } else {
        Player* temp = head;
        while (temp->next) {
            temp = temp->next;
        }
        temp->next = newPlayer;
    }

    cout << "Player " << name << " added with ID: " << newPlayer->id << endl;
}

// Play game and update player score
void playGame(Player* head, int id) {
    Player* player = findPlayerById(head, id);
    if (!player) {
        cout << "Player not found.\n";
        return;
    }

    cout << "Starting game for " << player->name << " (ID: " << player->id << ")...\n";
    displayQuestions(questions, player);

    cout << "Game Over! Final Score: " << player->score << "/10\n";
}

// View player record
void viewPlayer(Player* head, int id) {
    Player* player = findPlayerById(head, id);
    if (!player) {
        cout << "Player not found.\n";
        return;
    }

    cout << "\
